
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pankaj Yadav
 */
public class UserDetails extends javax.swing.JFrame {

    Connection con;
    Statement stmt;
    ResultSet rs;
    String query;
    String sn,name, matric, isbn,title,address, date, b1, b2, b3, b4, b5,b6;
    
    int rowCount = -1;
    
    /**
     * Creates new form IssuedBooks
     */
    public UserDetails() {
        initComponents();
        
        
        //this.setUndecorated(true);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setResizable(false);
        
        
        /////
        
    
            try
            {
              
            DefaultTableModel model=(DefaultTableModel)table.getModel();
            model.setRowCount(0);
          
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433; database=Trinity_DB; user=sa; password=Tunani14real;";
            Connection connect = DriverManager.getConnection(url);
            Statement st = connect.createStatement();
            rs = st.executeQuery("select * from User_vw_Table order by Full_name ASC");
           
            while(rs.next()){
                
                    name=rs.getString("Full_name");
                    title=rs.getString("User_Name");
                    isbn=rs.getString("Password");
                    matric=rs.getString("Phone_No");
                    address=rs.getString("Subject");
                    Object[] row = {name,title,isbn,matric,address};
                    model.addRow(row);
                    
            
            }

              
               lblmsg.setForeground(Color.blue);
               lblmsg.setText("record found");
            
            Statement st2 = connect.createStatement();
            ResultSet rs2 = st2.executeQuery("select count(*) from User_vw_Table");
                
            while(rs2.next()){
                
                rowCount = rs2.getInt(1);
                String str1 = Integer.toString(rowCount);
                if(rowCount > 0){
                    lblcount.setForeground(Color.blue);
                    lblcount.setText("(" + str1 +")");
                }else{
                    lblcount.setText("(" + str1 +")");
                }
            }
             connect.close();
             
            }
        catch(SQLException e)
            
            {
 
 
    System.out.println("Could not retrieve database metadata " + e.getMessage());
 
    }catch (ClassNotFoundException ex) {
                Logger.getLogger(AddNewBook.class.getName()).log(Level.SEVERE, null, ex);
            }
 
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        F_user2 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblmsg = new javax.swing.JLabel();
        lblcount = new javax.swing.JLabel();
        F_user = new javax.swing.JLabel();
        lblDel = new javax.swing.JLabel();
        lblUpdate = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1067, 604));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Library User Details");
        jLabel1.setMinimumSize(new java.awt.Dimension(900, 520));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "USERNAME", "PASSWORD", "PHONE", "COURSE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(200);
            table.getColumnModel().getColumn(1).setPreferredWidth(200);
            table.getColumnModel().getColumn(2).setPreferredWidth(150);
            table.getColumnModel().getColumn(3).setPreferredWidth(150);
            table.getColumnModel().getColumn(4).setPreferredWidth(200);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 1030, 340));

        F_user2.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        F_user2.setForeground(new java.awt.Color(0, 0, 102));
        F_user2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        F_user2.setText("<--Dashboard");
        F_user2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                F_user2MouseClicked(evt);
            }
        });
        jPanel1.add(F_user2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 160, 30));

        jButton8.setBackground(new java.awt.Color(0, 51, 102));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Add New User");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 130, 30));

        jLabel7.setBackground(new java.awt.Color(0, 204, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/b.png"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 150, 70));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/b2.png"))); // NOI18N
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 20, 270, 140));

        lblmsg.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblmsg.setForeground(new java.awt.Color(204, 0, 0));
        jPanel1.add(lblmsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 270, 20));

        lblcount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblcount.setForeground(new java.awt.Color(204, 0, 0));
        lblcount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(lblcount, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 30, 20));

        F_user.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        F_user.setForeground(new java.awt.Color(204, 0, 51));
        F_user.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(F_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 120, 41));

        lblDel.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        lblDel.setForeground(new java.awt.Color(153, 0, 0));
        lblDel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDel.setText("Delete");
        lblDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDelMouseClicked(evt);
            }
        });
        jPanel1.add(lblDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 180, 80, 30));

        lblUpdate.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        lblUpdate.setForeground(new java.awt.Color(153, 0, 0));
        lblUpdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUpdate.setText("Update");
        lblUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblUpdateMouseClicked(evt);
            }
        });
        jPanel1.add(lblUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 180, 90, 30));

        txt1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt1KeyReleased(evt);
            }
        });
        jPanel1.add(txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 140, 230, 30));

        jLabel3.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel3.setText("Search by ID :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, 120, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1069, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        AddNewUser ib=new AddNewUser();
            String dd = F_user.getText();
            AddNewUser.F_user.setText(dd);
        ib.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void F_user2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_F_user2MouseClicked
        // TODO add your handling code here:
        MainLayer mn=new MainLayer();
            String dd = F_user.getText();
            MainLayer.F_user.setText(dd);
        mn.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_F_user2MouseClicked

    private void lblDelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDelMouseClicked
        // TODO add your handling code here:

        DefaultTableModel model=(DefaultTableModel)table.getModel();
        //model.setRowCount(0);
        int SelectedRowIndex = table.getSelectedRow();
        String selected = model.getValueAt(SelectedRowIndex, 2).toString();

        if(SelectedRowIndex >= 0){
            // remove a row from jtable
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433; database=Trinity_DB; user=sa; password=Tunani14real;";
                Connection connect = DriverManager.getConnection(url);String sql = "delete from User_Table where Password= ?";
                PreparedStatement stmt = connect.prepareStatement(sql);
                stmt.setString( 1, selected );

                int DialogButton = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the selected record?", "Warning", JOptionPane.YES_NO_OPTION);

                if(DialogButton == JOptionPane.YES_OPTION){

                    stmt.executeUpdate();
                    model.removeRow(SelectedRowIndex);
                    UserDetails info = new UserDetails();
                    info.setVisible(true);
                    this.dispose();

                }else{

                }

            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        }
        else{
            System.out.println("Delete Error");
        }
    }//GEN-LAST:event_lblDelMouseClicked

    private void lblUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUpdateMouseClicked
        // TODO add your handling code here:
          
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        //model.setRowCount(0);
          int SelectedRowIndex = table.getSelectedRow();
            String selected = model.getValueAt(SelectedRowIndex, 2).toString();
                    
                if(SelectedRowIndex >= 0){
                    // remove a row from jtable    
                    try
                   {

                       Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                       String url = "jdbc:sqlserver://localhost:1433; database=Trinity_DB; user=sa; password=Tunani14real;";
                       Connection connect = DriverManager.getConnection(url);
                       
                        String sql = "select * from User_vw_Table where Password = ?";
                        PreparedStatement pst = connect.prepareStatement(sql);
                        
                        pst.setString( 1, selected );
                        
                        ResultSet rs = pst.executeQuery();
                        
                            
                         int DialogButton = JOptionPane.showConfirmDialog(null, "Are you sure you want to update the selected record?", "Warning", JOptionPane.YES_NO_OPTION);

                        if(DialogButton == JOptionPane.YES_OPTION){
 
                            while(rs.next()){

                            AddNewUser info = new AddNewUser();
                            
                            AddNewUser.jButton1.setVisible(false);
                            AddNewUser.btnUpdate.setVisible(true);
                            AddNewUser.jButton2.setVisible(false);
                            AddNewUser.btnCUpdate.setVisible(true);
                            AddNewUser.jLabel1.setText("Update Book");
                            
                            b1=rs.getString("Full_name");
                            AddNewUser.t1.setText(b1);
                            b2=rs.getString("User_Name");
                            AddNewUser.t2.setText(b2);
                            b3=rs.getString("Password");
                            AddNewUser.t4.setText(b3);
                            b4=rs.getString("Phone_No");
                            AddNewUser.t3.setText(b4);
                            b5=rs.getString("Address");
                            AddNewUser.a1.setText(b5);
                            b6=rs.getString("Subject");
                            AddNewUser.c1.setSelectedItem(b6);
                            info.setVisible(true);
                            this.dispose();
                            
                            }
                            //stmt.executeUpdate();
                            //model.removeRow(SelectedRowIndex);
                            //BookDetails info = new BookDetails();
                            //info.setVisible(true);
                            //this.dispose();

                        }else{

                        }


                   }
                   catch(Exception e)
                   {
                       System.out.println(e);
                   }
                }
                else{
                    System.out.println("Delete Error");
                }
    }//GEN-LAST:event_lblUpdateMouseClicked

    private void txt1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt1KeyReleased

        DefaultTableModel model=(DefaultTableModel)table.getModel();
        model.setRowCount(0);
        String txt=txt1.getText();
        if(txt.equals(""))
        System.out.println("");
        else
        {
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433; database=Trinity_DB; user=sa; password=Tunani14real;";
                Connection connect = DriverManager.getConnection(url);
                Statement st = connect.createStatement();
                rs = st.executeQuery("select * from User_vw_Table where Password LIKE '%"+txt1.getText()+"%' order by Full_name ASC");

                // query="select * from books where BookName LIKE \"%"+txt1.getText()+"%\";";
                // rs=stmt.executeQuery(query);
                while(rs.next())
                {

                    name=rs.getString("Full_name");
                    title=rs.getString("User_Name");
                    isbn=rs.getString("Password");
                    matric=rs.getString("Phone_No");
                    address=rs.getString("Subject");
                    Object[] row = {name,title,isbn,matric,address};
                    model.addRow(row);
                }
                connect.close();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_txt1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssuedBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssuedBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssuedBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssuedBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserDetails().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel F_user;
    public static javax.swing.JLabel F_user2;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel lblDel;
    public static javax.swing.JLabel lblUpdate;
    private javax.swing.JLabel lblcount;
    private javax.swing.JLabel lblmsg;
    private javax.swing.JTable table;
    public static javax.swing.JTextField txt1;
    // End of variables declaration//GEN-END:variables
}
